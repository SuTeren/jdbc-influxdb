package net.suteren.jdbc.influxdb.statement;

import java.sql.SQLException;
import java.sql.SQLWarning;

import org.influxdb.InfluxDB;
import org.influxdb.dto.Query;
import org.influxdb.dto.QueryResult;

import net.suteren.jdbc.influxdb.InfluxDbConnection;
import net.suteren.jdbc.influxdb.resultset.InfluxDbResultSet;

public class InfluxDbStatement extends AbstractInfluxDbStatement {

	public InfluxDbStatement(InfluxDbConnection influxDbConnection, InfluxDB client) {
		super(influxDbConnection, client);
	}

	@Override public InfluxDbResultSet executeQuery(String sql) throws SQLException {
		try {
			return resultSet = new InfluxDbResultSet(this, executeCommand(sql).getResults());
		} catch (Exception e) {
			throw new SQLException(String.format("Execution of query '%s' failed: %s", sql, e.getMessage()), e);
		}
	}

	private QueryResult executeCommand(String sql) {
		log.fine(() -> String.format("Executing query %s", sql));
		String command = getConnection().nativeSQL(sql);
		log.fine(() -> String.format("Executing NATIVE query %s", command));
		QueryResult query = client.query(new Query(command));
		error = new SQLWarning(query.getError());
		return query;
	}

	@Override public int executeUpdate(String sql) throws SQLException {
		try (InfluxDbResultSet r = executeQuery(sql)) {
			return r.getCurrentRows().size();
		} catch (SQLException e) {
			throw e;
		} catch (Exception e) {
			throw new SQLException(String.format("Execution of query '%s' failed: %s", sql, e.getMessage()), e);
		}
	}

	@Override public boolean execute(String sql) throws SQLException {
		return executeUpdate(sql) > 0;
	}

	@Override public void addBatch(String sql) {

	}

	@Override public void clearBatch() {

	}

	@Override public int[] executeBatch() {
		return new int[0];
	}

	@Override public int executeUpdate(String sql, int autoGeneratedKeys) {
		return 0;
	}

	@Override public int executeUpdate(String sql, int[] columnIndexes) {
		return 0;
	}

	@Override public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
		return execute(sql);
	}

	@Override public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		return execute(sql);
	}
}
